{"version":3,"sources":["components/Player.js","components/Song.js","components/LibrarySong.js","components/Library.js","components/Nav.js","components/WordBackground.js","data.js","App.js","reportWebVitals.js","index.js"],"names":["Player","isPlaying","songInfo","audioRef","currentSong","songs","setSongInfo","setIsPlaying","setCurrentSong","setSongs","useEffect","newSongs","map","song","id","active","getTime","time","Math","floor","slice","skipTrackHandler","direction","a","currentIndex","findIndex","newIndex","length","current","play","trackAnim","transform","animationPercentage","className","currentTime","style","background","color","min","max","duration","value","onChange","e","target","type","onClick","size","icon","faAngleLeft","pause","faPause","faPlay","faAngleRight","Song","src","cover","alt","name","artist","LibrarySong","songSelectHandler","Library","libraryStatus","Nav","setLibraryStatus","faMusic","WordBackground","chillHop","audio","uuidv4","App","useRef","useState","data","timeUpdateHandler","roundedCurrent","round","roundedDuration","animation","songEndHandler","onLoadedMetadata","onTimeUpdate","ref","onEnded","href","rel","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.726aa583.chunk.js","sourcesContent":["import { useEffect } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faPlay,\r\n  faPause,\r\n  faAngleLeft,\r\n  faAngleRight,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Player = ({\r\n  isPlaying,\r\n  songInfo,\r\n  audioRef,\r\n  currentSong,\r\n  songs,\r\n  setSongInfo,\r\n  setIsPlaying,\r\n  setCurrentSong,\r\n  setSongs,\r\n}) => {\r\n  //useEffect\r\n  useEffect(() => {\r\n    //Add active state\r\n    const newSongs = songs.map((song) => {\r\n      if (song.id === currentSong.id) {\r\n        return {\r\n          ...song,\r\n          active: true,\r\n        };\r\n      } else {\r\n        return {\r\n          ...song,\r\n          active: false,\r\n        };\r\n      }\r\n    });\r\n    setSongs(newSongs);\r\n    //eslint-disable-next-line\r\n  }, [currentSong]);\r\n\r\n  //Event handlers\r\n  const playSongHandler = () => {\r\n    if (isPlaying) {\r\n      audioRef.current.pause();\r\n      setIsPlaying(!isPlaying);\r\n    } else {\r\n      audioRef.current.play();\r\n      setIsPlaying(!isPlaying);\r\n    }\r\n  };\r\n\r\n  const getTime = (time) => {\r\n    return (\r\n      Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2)\r\n    );\r\n  };\r\n\r\n  const dragHandler = (e) => {\r\n    audioRef.current.currentTime = e.target.value;\r\n    setSongInfo({ ...songInfo, currentTime: e.target.value });\r\n  };\r\n\r\n  const skipTrackHandler = async (direction) => {\r\n    let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\r\n    let newIndex = currentIndex + direction;\r\n\r\n    if (newIndex < 0) newIndex = songs.length - 1;\r\n    if (newIndex >= songs.length) newIndex = 0;\r\n\r\n    await setCurrentSong(songs[newIndex]);\r\n    if (isPlaying) audioRef.current.play();\r\n  };\r\n\r\n  //Add the styles\r\n  const trackAnim = {\r\n    transform: `translateX(${songInfo.animationPercentage}%)`,\r\n  };\r\n\r\n  return (\r\n    <div className=\"player\">\r\n      <div className=\"time-control\">\r\n        <p>{getTime(songInfo.currentTime)}</p>\r\n        <div\r\n          style={{\r\n            background: `linear-gradient(to right, ${currentSong.color[0]}, ${currentSong.color[1]})`,\r\n          }}\r\n          className=\"track\"\r\n        >\r\n          <input\r\n            min={0}\r\n            max={songInfo.duration || 0}\r\n            value={songInfo.currentTime}\r\n            onChange={dragHandler}\r\n            type=\"range\"\r\n          />\r\n          <div style={trackAnim} className=\"animate-track\"></div>\r\n        </div>\r\n        <p>{songInfo.duration ? getTime(songInfo.duration) : \"0:00\"}</p>\r\n      </div>\r\n      <div className=\"play-control\">\r\n        <FontAwesomeIcon\r\n          onClick={() => skipTrackHandler(-1)}\r\n          className=\"skip-back icon\"\r\n          size=\"2x\"\r\n          icon={faAngleLeft}\r\n        />\r\n        <FontAwesomeIcon\r\n          onClick={playSongHandler}\r\n          className=\"play icon\"\r\n          size=\"2x\"\r\n          icon={isPlaying ? faPause : faPlay}\r\n        />\r\n        <FontAwesomeIcon\r\n          onClick={() => skipTrackHandler(1)}\r\n          className=\"skip-forward icon\"\r\n          size=\"2x\"\r\n          icon={faAngleRight}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Player;\r\n","const Song = ({ currentSong, isPlaying }) => {\r\n  return (\r\n    <div className=\"song-container\">\r\n      <img\r\n        src={currentSong.cover}\r\n        className={` ${isPlaying ? \"rotating-cover\" : \"\"}`}\r\n        alt={currentSong.name}\r\n      ></img>\r\n      <h2>{currentSong.name}</h2>\r\n      <h3>{currentSong.artist}</h3>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Song;\r\n","const LibrarySong = ({\r\n  song,\r\n  songs,\r\n  isPlaying,\r\n  id,\r\n  audioRef,\r\n  setCurrentSong,\r\n  setSongs,\r\n}) => {\r\n  const songSelectHandler = async () => {\r\n    await setCurrentSong(song);\r\n\r\n    //Active state\r\n    const newSongs = songs.map((song) => {\r\n      if (song.id === id) {\r\n        return {\r\n          ...song,\r\n          active: true,\r\n        };\r\n      } else {\r\n        return {\r\n          ...song,\r\n          active: false,\r\n        };\r\n      }\r\n    });\r\n    setSongs(newSongs);\r\n    //Check is the song is playing\r\n    if (isPlaying) audioRef.current.play();\r\n  };\r\n  return (\r\n    <div\r\n      onClick={songSelectHandler}\r\n      className={`library-song ${song.active ? \"selected\" : \"\"}`}\r\n    >\r\n      <img src={song.cover} alt={song.name}></img>\r\n      <div className=\"song-description\">\r\n        <h3>{song.name}</h3>\r\n        <h4>{song.artist}</h4>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LibrarySong;\r\n","import LibrarySong from \"./LibrarySong\";\r\n\r\nconst Library = ({\r\n  songs,\r\n  audioRef,\r\n  isPlaying,\r\n  libraryStatus,\r\n  setCurrentSong,\r\n  setSongs,\r\n}) => {\r\n  return (\r\n    <div className={`library ${libraryStatus ? \"active-library\" : \"\"}`}>\r\n      <h2>Library</h2>\r\n      <div className=\"library-songs\">\r\n        {songs.map((song) => (\r\n          <LibrarySong\r\n            song={song}\r\n            songs={songs}\r\n            id={song.id}\r\n            key={song.id}\r\n            audioRef={audioRef}\r\n            setCurrentSong={setCurrentSong}\r\n            isPlaying={isPlaying}\r\n            setSongs={setSongs}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Library;\r\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faMusic } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Nav = ({ libraryStatus, setLibraryStatus }) => {\r\n  return (\r\n    <nav>\r\n      <h1>\r\n        <span className=\"logo\">KDA </span>\r\n        Music player\r\n      </h1>\r\n      <button\r\n        onClick={() => {\r\n          setLibraryStatus(!libraryStatus);\r\n        }}\r\n      >\r\n        Library\r\n        <FontAwesomeIcon icon={faMusic} />\r\n      </button>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Nav;\r\n","const WordBackground = ({ isPlaying }) => {\r\n  return (\r\n    <span className={`bigB uniqueTime ${isPlaying ? \"flicker-in-1\" : \"\"}`}>\r\n      K / DA\r\n    </span>\r\n  );\r\n};\r\n\r\nexport default WordBackground;\r\n","import { v4 as uuidv4 } from \"uuid\";\r\nfunction chillHop() {\r\n  return [\r\n    {\r\n      name: \"More\",\r\n      cover:\r\n        \"https://i0.wp.com/colorcodedlyrics.com/wp-content/uploads/2020/10/kda-more.jpg?fit=640%2C640&ssl=1\",\r\n      artist:\r\n        \"K/DA ft. Madison Beer, (G)I-DLE, Lexie Liu, Jaira Burns y Seraphine\",\r\n      audio: \"https://audio.jukehost.co.uk/vEJdY0ibFVVP4NgDsBDcPKnqojLWY9sd\",\r\n      color: [\"#E8B72A\", \"#A8C3E0\"],\r\n      id: uuidv4(),\r\n      active: true,\r\n    },\r\n    {\r\n      name: \"Villain\",\r\n      cover: \"https://i.ibb.co/rvx0qKW/evelynn-villain3.png\",\r\n      artist: \"Evelynn ft. Madison Beer and Kim Petras\",\r\n      audio: \"https://audio.jukehost.co.uk/gV1bxpmCAWcCiP7DlOqrnIil5c1GxUst\",\r\n      color: [\"#D746A1\", \"#6F0C72\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    {\r\n      name: \"Drum Go Dum\",\r\n      cover: \"https://i.ibb.co/7SvKYgQ/all-out.png\",\r\n      artist: \"K/DA ft. Wolftyla, Bekuh BOOM, Aluna, League of Legends\",\r\n      audio: \"https://audio.jukehost.co.uk/FLgUN6h3D6Worj5TLBxDuSmEPr3GKRzC\",\r\n      color: [\"#CFFAE7\", \"#A2D4F3\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    {\r\n      name: \"Pop/Stars\",\r\n      cover: \"https://i.ibb.co/D7F92Gn/popstars.png\",\r\n      artist: \"K/DA ft. Madison Beer, (G)I-DLE, Jaira Burns, League Of Legends\",\r\n      audio: \"https://audio.jukehost.co.uk/Y7q6VoEHDVPqujli5iH8TGFecmwQ9WRR\",\r\n      color: [\"#4a3d77\", \"#06082B\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    {\r\n      name: \"The Baddest\",\r\n      cover:\r\n        \"https://esports.as.com/2020/08/27/league-of-legends/THE-BADDEST_1386471401_485435_667x667.jpg\",\r\n      artist: \"K/DA ft. (G)I-DLE, Bea Miller, Wolftyla\",\r\n      audio: \"https://audio.jukehost.co.uk/EKZnzjqtkvQsZ3wJ898HR5Y8IoVUbwye\",\r\n      color: [\"#869BA6\", \"#211D2A\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    {\r\n      name: \"I'll Show You\",\r\n      cover: \"https://i.ibb.co/Xsb6Vj3/showu.png\",\r\n      artist: \"K/DA ft. Twice, Bekuh BOOM, Annika Wells\",\r\n      audio: \"https://audio.jukehost.co.uk/fSfrC6W4E70660CCPXz1kUA4E6gV3HkY\",\r\n      color: [\"#A9C6E3\", \"#1A1823\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    {\r\n      name: \"Childhood Dreams\",\r\n      cover: \"https://i.ibb.co/RDVK4ZR/childhoodnew.png\",\r\n      artist: \"Cover Seraphine\",\r\n      audio: \"https://audio.jukehost.co.uk/sEhmEUKiguFiEsdnBqby0p9dERKlPxeh\",\r\n      color: [\"#A8616D\", \"#BE8991\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    {\r\n      name: \"All The Things She Said\",\r\n      cover: \"https://i.ibb.co/s2LH5dH/allthenew.png\",\r\n      artist: \"Cover Seraphine\",\r\n      audio: \"https://audio.jukehost.co.uk/6W3SMdy3DsAa2VuiOdIgmhP8CyD9Em7r\",\r\n      color: [\"#614389\", \"#A3ABCF\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    {\r\n      name: \"Made Me This Way\",\r\n      cover: \"https://i.ibb.co/HDCc1pz/madethisnew.png\",\r\n      artist: \"Cover Seraphine ft. Jasmine Clarke, Absofacto, Kosukekasza\",\r\n      audio: \"https://audio.jukehost.co.uk/Pjh3DzgFjxC8P6m8GU7lC24UNSfTghwg\",\r\n      color: [\"#1C2E52\", \"#8D8F8F\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    {\r\n      name: \"Pop/Stars Cover\",\r\n      cover: \"https://i.ibb.co/bNrNqyS/popstarsnew.png\",\r\n      artist: \"Seraphine\",\r\n      audio: \"https://audio.jukehost.co.uk/tM87whzbRPd6jpUGI4YYfgeOtl6OkbtT\",\r\n      color: [\"#6D4270\", \"#B77E8D\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    {\r\n      name: \"The Starry-Eyed Songstress\",\r\n      cover: \"https://i.ibb.co/SNkcKPR/starry.png\",\r\n      artist: \"Seraphine\",\r\n      audio: \"https://audio.jukehost.co.uk/O3TvGR8K3tcOpIwTgNLhrw1qMCdgHpHZ\",\r\n      color: [\"#B14978\", \"#FD7FC9\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    //ADD MORE HERE\r\n  ];\r\n}\r\n\r\nexport default chillHop;\r\n","import { useState, useRef } from \"react\";\n\n//Adding the components\nimport Player from \"./components/Player\";\nimport Song from \"./components/Song\";\nimport Library from \"./components/Library\";\nimport Nav from \"./components/Nav\";\nimport WordBackground from \"./components/WordBackground\";\n\n//Import styles\nimport \"./styles/app.scss\";\n\n//Import data\nimport data from \"./data\";\n\nfunction App() {\n  //ref\n  const audioRef = useRef(null);\n\n  //States\n  const [songs, setSongs] = useState(data());\n  const [currentSong, setCurrentSong] = useState(songs[0]);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [songInfo, setSongInfo] = useState({\n    currentTime: 0,\n    duration: 0,\n    animationPercentage: 0,\n  });\n  const [libraryStatus, setLibraryStatus] = useState(false);\n\n  const timeUpdateHandler = (e) => {\n    const current = e.target.currentTime;\n    const duration = e.target.duration;\n    //Calculate porcentage\n    const roundedCurrent = Math.round(current);\n    const roundedDuration = Math.round(duration);\n    const animation = Math.round((roundedCurrent / roundedDuration) * 100);\n    setSongInfo({\n      ...songInfo,\n      currentTime: current,\n      duration,\n      animationPercentage: animation,\n    });\n  };\n\n  const songEndHandler = async () => {\n    let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\n    let newIndex = currentIndex + 1;\n    if (newIndex >= songs.length) newIndex = 0;\n\n    await setCurrentSong(songs[newIndex]);\n    if (isPlaying) audioRef.current.play();\n  };\n\n  return (\n    <div className={`App ${libraryStatus ? \"library-active\" : \"\"}`}>\n      <Nav libraryStatus={libraryStatus} setLibraryStatus={setLibraryStatus} />\n      <Song isPlaying={isPlaying} currentSong={currentSong} />\n      <Player\n        isPlaying={isPlaying}\n        currentSong={currentSong}\n        songInfo={songInfo}\n        songs={songs}\n        audioRef={audioRef}\n        setSongInfo={setSongInfo}\n        setIsPlaying={setIsPlaying}\n        setCurrentSong={setCurrentSong}\n        setSongs={setSongs}\n      />\n      <Library\n        audioRef={audioRef}\n        songs={songs}\n        isPlaying={isPlaying}\n        setCurrentSong={setCurrentSong}\n        setSongs={setSongs}\n        libraryStatus={libraryStatus}\n      />\n      <audio\n        onLoadedMetadata={timeUpdateHandler}\n        onTimeUpdate={timeUpdateHandler}\n        ref={audioRef}\n        src={currentSong.audio}\n        onEnded={songEndHandler}\n      ></audio>\n      <WordBackground isPlaying={isPlaying} />\n      <h1 className={`made-with ${libraryStatus ? \"library-active z\" : \"\"}`}>\n        Made with &#x2764;&#xFE0F; by{\" \"}\n        <a\n          href=\"https://github.com/sebasvil20\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          @Sebasvil20\n        </a>\n      </h1>\n      <h4 className={`copyright ${libraryStatus ? \"library-active z\" : \"\"}`}>\n        NO COPYRIGHT INFRINGEMENT INTENDED. ALL K/DA COPYRIGHT BELONG TO RIOT\n        GAMES, INC.\n      </h4>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}